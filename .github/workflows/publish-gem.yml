name: Publish to RubyGems

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true

jobs:
  publish-gem:
    runs-on: ubuntu-latest
    steps:
      - name: Get version first
        id: pre_version
        run: |
          VERSION="${{ github.event.inputs.version }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Will publish version: $VERSION"

      - uses: actions/checkout@v3
        with:
          ref: v${{ steps.pre_version.outputs.version }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"

      - name: Download pre-built binaries from release
        run: |
          VERSION=${{ steps.get_version.outputs.version }}

          # Clean old binaries completely
          rm -rf bindings/ruby/prebuilt
          mkdir -p bindings/ruby/prebuilt

          # Download macOS ARM64
          echo "📥 Downloading macOS ARM64 binary..."
          curl -L -o bindings/ruby/prebuilt/macos-arm64.tar.gz \
            "https://github.com/tranhuucanh/fastqr/releases/download/v${VERSION}/fastqr-${VERSION}-macos-arm64.tar.gz"

          # Download macOS x86_64
          echo "📥 Downloading macOS x86_64 binary..."
          curl -L -o bindings/ruby/prebuilt/macos-x86_64.tar.gz \
            "https://github.com/tranhuucanh/fastqr/releases/download/v${VERSION}/fastqr-${VERSION}-macos-x86_64.tar.gz"

          # Download Linux x86_64
          echo "📥 Downloading Linux x86_64 binary..."
          curl -L -o bindings/ruby/prebuilt/linux-x86_64.tar.gz \
            "https://github.com/tranhuucanh/fastqr/releases/download/v${VERSION}/fastqr-${VERSION}-linux-x86_64.tar.gz"

          # Download Linux ARM64
          echo "📥 Downloading Linux ARM64 binary..."
          curl -L -o bindings/ruby/prebuilt/linux-arm64.tar.gz \
            "https://github.com/tranhuucanh/fastqr/releases/download/v${VERSION}/fastqr-${VERSION}-linux-arm64.tar.gz"

          # Extract binaries
          cd bindings/ruby/prebuilt
          echo "📦 Extracting binaries..."
          tar -xzf macos-arm64.tar.gz
          tar -xzf macos-x86_64.tar.gz
          tar -xzf linux-x86_64.tar.gz
          tar -xzf linux-arm64.tar.gz

          echo "✅ Downloaded and extracted pre-built binaries"
          echo "Binary details (macOS):"
          file macos-arm64/bin/fastqr
          otool -L macos-arm64/bin/fastqr || true
          echo "Binary details (Linux):"
          file linux-x86_64/bin/fastqr
          ldd linux-x86_64/bin/fastqr || true
          echo "All binaries:"
          ls -lR

      - name: Build gem
        run: |
          gem build fastqr.gemspec

      - name: Run tests
        run: |
          cd bindings/ruby
          bundle exec rake test || echo "⚠️ Tests skipped"

      - name: Publish to RubyGems
        run: |
          mkdir -p ~/.gem
          cat > ~/.gem/credentials << EOF
          ---
          :rubygems_api_key: ${{ secrets.RUBYGEMS_API_KEY }}
          EOF
          chmod 0600 ~/.gem/credentials

          gem push fastqr-*.gem

      - name: Summary
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          echo "✅ Published fastqr-$VERSION to RubyGems!"
          echo "🔗 https://rubygems.org/gems/fastqr"

