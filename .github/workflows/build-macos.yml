name: Build macOS Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-macos-arm64:
    runs-on: macos-14  # M1 runner
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          set -e  # Exit on error
          brew install cmake qrencode pkg-config

          # Force install libpng (may already exist)
          brew install libpng || brew upgrade libpng || true

          # Verify critical dependencies
          echo "=== Verifying installations ==="
          which cmake
          which pkg-config

          echo "=== libqrencode version ==="
          pkg-config --modversion libqrencode

          echo "=== libpng version (CRITICAL) ==="
          PKG_PNG_VER=$(pkg-config --modversion libpng)
          echo "libpng version: $PKG_PNG_VER"

          # Ensure we have libpng 1.6+
          if [[ "$PKG_PNG_VER" < "1.6" ]]; then
            echo "❌ ERROR: libpng version too old: $PKG_PNG_VER"
            echo "Expected: 1.6+"
            exit 1
          fi

          echo "✅ All dependencies verified"

      - name: Build binary
        run: |
          # Force CMake to use Homebrew libraries (not system SDK)
          export PKG_CONFIG_PATH="/opt/homebrew/lib/pkgconfig:$PKG_CONFIG_PATH"
          export CMAKE_PREFIX_PATH="/opt/homebrew:$CMAKE_PREFIX_PATH"
          
          echo "=== CMake will search in ==="
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
          echo "CMAKE_PREFIX_PATH: $CMAKE_PREFIX_PATH"
          
          chmod +x scripts/build-binaries.sh
          ./scripts/build-binaries.sh || { echo "Build failed"; cat build.log 2>/dev/null || true; exit 1; }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm64
          path: prebuilt/*.tar.gz

  build-macos-x86_64:
    runs-on: macos-13  # Intel runner
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          set -e  # Exit on error
          brew install cmake qrencode pkg-config

          # Force install libpng (may already exist)
          brew install libpng || brew upgrade libpng || true

          # Verify critical dependencies
          echo "=== Verifying installations ==="
          which cmake
          which pkg-config

          echo "=== libqrencode version ==="
          pkg-config --modversion libqrencode

          echo "=== libpng version (CRITICAL) ==="
          PKG_PNG_VER=$(pkg-config --modversion libpng)
          echo "libpng version: $PKG_PNG_VER"

          # Ensure we have libpng 1.6+
          if [[ "$PKG_PNG_VER" < "1.6" ]]; then
            echo "❌ ERROR: libpng version too old: $PKG_PNG_VER"
            echo "Expected: 1.6+"
            exit 1
          fi

          echo "✅ All dependencies verified"

      - name: Build binary
        run: |
          # Force CMake to use Homebrew libraries (not system SDK)
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
          export CMAKE_PREFIX_PATH="/usr/local:$CMAKE_PREFIX_PATH"
          
          echo "=== CMake will search in ==="
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
          echo "CMAKE_PREFIX_PATH: $CMAKE_PREFIX_PATH"
          
          chmod +x scripts/build-binaries.sh
          ./scripts/build-binaries.sh || { echo "Build failed"; cat build.log 2>/dev/null || true; exit 1; }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-x86_64
          path: prebuilt/*.tar.gz

  create-release:
    needs: [build-macos-arm64, build-macos-x86_64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create source tarball (stable hash)
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          git archive --format=tar.gz --prefix=fastqr-$VERSION/ HEAD > fastqr-$VERSION.tar.gz
          echo "Created source tarball: fastqr-$VERSION.tar.gz"
          shasum -a 256 fastqr-$VERSION.tar.gz

      - name: List artifacts
        run: |
          echo "Downloaded artifacts:"
          ls -R artifacts/
          echo "Source tarball:"
          ls -lh fastqr-*.tar.gz

      - name: Upload to Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*/*.tar.gz
            fastqr-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

