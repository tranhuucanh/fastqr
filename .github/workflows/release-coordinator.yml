name: Release Coordinator

# This workflow waits for BOTH build workflows to complete,
# then triggers the publish workflows

on:
  workflow_run:
    workflows: ["Build macOS Binaries", "Build Linux Binaries"]
    types:
      - completed

permissions:
  contents: write
  actions: write

jobs:
  check-and-publish:
    runs-on: ubuntu-latest
    # Only run if the workflow succeeded
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Get tag from ref
        id: get_tag
        run: |
          REF="${{ github.event.workflow_run.head_branch }}"
          echo "Full ref: $REF"

          # Extract tag if this is a tag push
          if [[ $REF == refs/tags/* ]]; then
            TAG="${REF#refs/tags/}"
            VERSION="${TAG#v}"
            echo "tag=$TAG" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "is_tag=true" >> $GITHUB_OUTPUT
            echo "Detected tag: $TAG (version: $VERSION)"
          else
            echo "is_tag=false" >> $GITHUB_OUTPUT
            echo "Not a tag push, skipping"
          fi

      - name: Wait for release to have all artifacts
        if: steps.get_tag.outputs.is_tag == 'true'
        run: |
          TAG="${{ steps.get_tag.outputs.tag }}"
          VERSION="${{ steps.get_tag.outputs.version }}"

          echo "⏳ Waiting for release $TAG to have all artifacts..."

          # Expected artifacts (4 binaries: 2 macOS + 2 Linux)
          EXPECTED_COUNT=5  # 4 binaries + 1 source tarball
          MAX_WAIT=300      # 5 minutes
          INTERVAL=15       # Check every 15 seconds
          ELAPSED=0

          while [ $ELAPSED -lt $MAX_WAIT ]; do
            # Check if release exists and count assets
            ASSET_COUNT=$(gh release view "$TAG" --json assets --jq '.assets | length' 2>/dev/null || echo "0")

            echo "📦 Release $TAG has $ASSET_COUNT/$EXPECTED_COUNT assets"

            if [ "$ASSET_COUNT" -ge "$EXPECTED_COUNT" ]; then
              echo "✅ All artifacts uploaded! Listing assets:"
              gh release view "$TAG" --json assets --jq '.assets[].name'
              exit 0
            fi

            echo "⏳ Still waiting... ($ELAPSED/$MAX_WAIT seconds)"
            sleep $INTERVAL
            ELAPSED=$((ELAPSED + INTERVAL))
          done

          echo "⚠️ Timeout waiting for all artifacts. Found $ASSET_COUNT/$EXPECTED_COUNT"
          gh release view "$TAG" --json assets --jq '.assets[].name' 2>/dev/null || true
          exit 1
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Trigger publish workflows
        if: steps.get_tag.outputs.is_tag == 'true'
        run: |
          VERSION="${{ steps.get_tag.outputs.version }}"

          echo "🚀 Triggering publish workflows for version $VERSION"

          # Trigger npm publish
          gh workflow run publish-npm.yml \
            -f version="$VERSION" \
            --repo ${{ github.repository }}

          echo "✅ Triggered npm publish"

          # Wait a bit before triggering gem to avoid race condition
          sleep 2

          # Trigger gem publish
          gh workflow run publish-gem.yml \
            -f version="$VERSION" \
            --repo ${{ github.repository }}

          echo "✅ Triggered gem publish"
          echo ""
          echo "📊 Monitor workflows at:"
          echo "https://github.com/${{ github.repository }}/actions"
        env:
          GH_TOKEN: ${{ github.token }}

